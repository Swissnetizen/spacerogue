// Generated by CoffeeScript 1.9.1
(function() {
  "use strict";
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  define(["Phaser", "Ship"], function(Phaser, ship) {
    var PlayState, exports;
    exports = {};
    exports.PlayState = PlayState = (function(superClass) {
      extend(PlayState, superClass);

      function PlayState() {
        return PlayState.__super__.constructor.apply(this, arguments);
      }

      PlayState.prototype.create = function() {
        this.ship = new ship.BaseShip(this.game, 10, 10, "shuttle");
        return game.add.existing(this.ship);
      };

      PlayState.prototype.update = function() {};

      return PlayState;

    })(Phaser.State);
    return exports;
  });

}).call(this);

//# sourceMappingURL=play.js.map
